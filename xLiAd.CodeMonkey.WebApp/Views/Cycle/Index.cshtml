<el-row style="padding:3px;margin:3px;">
    <el-breadcrumb separator="/">
        <el-breadcrumb-item :to="{ path: '/' }">首页</el-breadcrumb-item>
        <el-breadcrumb-item>广告位主表</el-breadcrumb-item>
    </el-breadcrumb>
</el-row>
<el-row style="width: 100%;margin: 5px 0 5px 0;background-color:#ddd;padding:4px 0 4px 0;" :gutter="10">
    <el-col :span="3">
        <el-input type="text" placeholder="请输入关键词" v-model="Query.Key">
        </el-input>
    </el-col>

    <el-col :span="4">
        <el-button type="primary" v-on:click="QueryClick">查询</el-button>
        <el-button type="primary" v-on:click="InitAdd">新增</el-button>
    </el-col>
</el-row>
<el-table :data="tableData" style="width: 100%" class="spHeight">
    <el-table-column label="目标周期主键ID" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.CycleId }}</span>
        </template>
    </el-table-column>
    <el-table-column label="目标周期名称" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.CycleName }}</span>
        </template>
    </el-table-column>
    <el-table-column label="开始时间" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.StartTime }}</span>
        </template>
    </el-table-column>
    <el-table-column label="结束时间" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.EndTime }}</span>
        </template>
    </el-table-column>
    <el-table-column label="状态" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.Status }}</span>
        </template>
    </el-table-column>
    <el-table-column label="备注" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.Memo }}</span>
        </template>
    </el-table-column>
    <el-table-column label="是否无效，0:无效，1:有效" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.EnableFlag }}</span>
        </template>
    </el-table-column>
    <el-table-column label="创建时间" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.CreateTime }}</span>
        </template>
    </el-table-column>
    <el-table-column label="创建人" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.CreateUserId }}</span>
        </template>
    </el-table-column>
    <el-table-column label="最后更新时间" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.LastUpdateTime }}</span>
        </template>
    </el-table-column>
    <el-table-column label="最后更新人" width="200">
        <template slot-scope="scope">
            <span style="margin-left: 1px">{{ scope.row.LastUpdateUserId }}</span>
        </template>
    </el-table-column>
    <el-table-column label="操作" width="90">
        <template slot-scope="scope">
            <span style="margin-left: 1px">
                <el-button type="primary" v-on:click="InitEdit(scope.row)">编辑</el-button>
            </span>
        </template>
    </el-table-column>
    <el-table-column label="" width="90">
        <template slot-scope="scope">
            <span style="margin-left: 1px">
                <el-button type="danger" v-on:click="DeleteModel(scope.row)">删除</el-button>
            </span>
        </template>
    </el-table-column>
    <el-table-column></el-table-column>
</el-table>
<el-row style="width: 100%;margin: 5px 0 5px 0;background-color:#fff;padding:4px 0 4px 0;" :gutter="10">
    <el-pagination style="width:750px;float:left;" background v-on:size-change="handleSizeChange" v-on:current-change="handleCurrentChange" :current-page="Query.PageIndex"
                   layout="total, prev, pager, next, sizes, jumper"
                   :page-sizes="pager.pageSizes"
                   :total="pager.total">
    </el-pagination>
    <img src="~/images/excel.gif" style="float:left;margin:7px;cursor:pointer;" v-on:click="ExportExcel" />
</el-row>
@section Dialogs{
    <el-dialog title="编辑广告位主表" :visible.sync="showEdit" width="666px" append-to-body :close-on-click-modal="false" :before-close="closeDialog">
        <el-form :model="EditModel" label-width="120px;">
            <el-form-item label="目标周期主键ID">
                <el-col :span="20">
                    <el-input placeholder="CycleId" v-model="EditModel.CycleId" type="text"></el-input>
                </el-col>
            </el-form-item>
            <el-form-item label="目标周期名称">
                <el-col :span="20">
                    <el-input placeholder="CycleName" v-model="EditModel.CycleName" type="text"></el-input>
                </el-col>
            </el-form-item>
            <el-form-item label="开始时间">
                <el-col :span="20">
                    <el-date-picker value-format="yyyy-MM-dd" v-model="EditModel.StartTime" placeholder="StartTime" type="date"></el-date-picker>
                </el-col>
            </el-form-item>
            <el-form-item label="结束时间">
                <el-col :span="20">
                    <el-date-picker value-format="yyyy-MM-dd" v-model="EditModel.EndTime" placeholder="EndTime" type="date"></el-date-picker>
                </el-col>
            </el-form-item>
            <el-form-item label="状态">
                <el-col :span="20">
                    <el-input placeholder="Status" v-model="EditModel.Status" type="text"></el-input>
                </el-col>
            </el-form-item>
            <el-form-item label="备注">
                <el-col :span="20">
                    <el-input placeholder="Memo" id="TxtMemo" v-model="EditModel.Memo"></el-input>
                </el-col>
            </el-form-item>
            <el-form-item label="是否无效，0:无效，1:有效">
                <el-col :span="20">
                    <el-switch v-model="EditModel.EnableFlag" active-color="#13ce66" inactive-color="#ff4949" active-text="是" inactive-text="否"></el-switch>
                </el-col>
            </el-form-item>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button v-on:click="EditCacel">取 消</el-button>
            <el-button type="primary" v-on:click="SubmitModel">确 定</el-button>
        </div>
    </el-dialog>
}
@section Scripts{
    <script src="~/lib/tinymce/tinymce.min.js"></script>
    <script type="text/javascript">
        var app = new Vue({
            el: '#app',
            data: {
                activeIndex: "Cycle",
                @await Html.PartialAsync("CommonData")
                Query: {
                    Key:'',
                    PageSize: 10,
                    PageIndex: 1
                },
                tableData: [],
                pager: {
                    pageSizes: [10, 20, 30, 50, 100, 500],
                    total: 0
                },
                exportColumn: {//导出Excel时的列                    CycleId: "目标周期主键ID",
                    CycleName: "目标周期名称",
                    StartTime: "开始时间",
                    EndTime: "结束时间",
                    Status: "状态",
                    Memo: "备注",
                    EnableFlag: "是否无效，0:无效，1:有效",
                    CreateTime: "创建时间",
                    CreateUserId: "创建人",
                    LastUpdateTime: "最后更新时间",
                    LastUpdateUserId: "最后更新人"
                },
                showEdit: false,
                EditModel: {
                    CycleId: 0,
                    CycleName: '',
                    StartTime: '',
                    EndTime: '',
                    Status: '',
                    Memo: '',
                    EnableFlag: false
                },
                EditMode: false,
            },
            methods: {
                ExportExcel: function () {
                    var form = $("<form>");//定义一个form表单
                    form.attr("style", "display:none");
                    form.attr("target", "");
                    form.attr("method", "post");
                    form.attr("action", ExcelExportUrl);
                    var hdxls = $("<input>");
                    hdxls.attr("type", "hidden");
                    hdxls.attr("name", "column");
                    hdxls.attr("value", JSON.stringify(this.exportColumn));
                    var hdstore = $("<input>");
                    hdstore.attr("type", "hidden");
                    hdstore.attr("name", "data");
                    hdstore.attr("value", JSON.stringify(this.tableData));
                    $("body").append(form);//将表单放置在web中
                    form.append(hdstore);
                    form.append(hdxls);
                    form.submit();//表单提交
                    //console.log(form)
                },
                InitAdd: function () {
                    this.EditModel.CycleId = 0;
                    this.EditModel.CycleName = '';
                    this.EditModel.StartTime = '';
                    this.EditModel.EndTime = '';
                    this.EditModel.Status = '';
                    this.EditModel.Memo = '';
                    this.EditModel.EnableFlag = false;
                    this.showEdit = true;
                    this.EditMode = false;

                    var that = this;
                    this.$nextTick(function () { that.InitTinymce(); });
                },
                InitEdit: function (m) {
                    this.EditModel.CycleId = m.CycleId;
                    this.EditModel.CycleName = m.CycleName;
                    this.EditModel.StartTime = m.StartTime;
                    this.EditModel.EndTime = m.EndTime;
                    this.EditModel.Status = m.Status;
                    this.EditModel.Memo = m.Memo;
                    this.EditModel.EnableFlag = m.EnableFlag;
                    this.showEdit = true;
                    this.EditMode = true;

                    var that = this;
                    this.$nextTick(function () { that.InitTinymce(); });
                },
                LoadEditData: function () {//编辑提交时，从数据里加载到MODEL
                    this.EditModel.Memo = tinymce.editors[0].getContent();
                },
                SubmitModel: function () {
                    if (this.EditMode) {
                        this.EditSubmit();
                    } else {
                        this.AddSubmit();
                    }
                },
                EditSubmit: function () {
                    this.LoadEditData();
                    var that = this;
                    JsonAjaxPost("/Cycle/Edit",
                        this.EditModel, function (data) {
                            if (data.result) {
                                that.DestroyTinymce();
                                that.showEdit = false;
                                that.$message({
                                    message: '操作成功',
                                    type: 'success'
                                });
                                that.GetData();
                            } else {
                                that.$message.error("出错了：" + data.message);
                            }
                        });
                },
                AddSubmit: function () {
                    if (this.submitting == true) {
                        this.$message.error("正在提交数据，请稍候。");
                        return;
                    }
                    this.submitting = true;
                    this.LoadEditData();
                    //this.EditModel.Deleted = false;
                    var that = this;
                    JsonAjaxPost("/Cycle/Add",
                        this.EditModel, function (data) {
                            if (data.result) {
                                that.DestroyTinymce();
                                that.showEdit = false;
                                that.$message({
                                    message: '操作成功',
                                    type: 'success'
                                });
                                that.GetData();
                            } else {
                                that.$message.error("出错了：" + data.message);
                            }
                            that.submitting = false;
                        });
                },
                GetData: function () {
                    var that = this;
                    CommonAjaxPost("/Cycle/GetListData",
                        this.Query,
                        function (data) {
                            if (data.result) {
                                that.tableData = data.listData;
                                that.pager.total = data.total;
                            } else {
                                that.$message.error("出错了：" + data.message);
                            }
                        });
                },
                QueryClick: function () {
                    this.Query.PageIndex = 1;
                    this.GetData();
                },
                handleSizeChange: function (size) {
                    this.Query.PageSize = size;
                    this.GetData();
                },
                handleCurrentChange: function (pageIndex) {
                    this.Query.PageIndex = pageIndex;
                    this.GetData();
                },
                @await Html.PartialAsync("CommonMethod")
                DeleteModel: function (m) {
                    var that = this;
                    this.$confirm('确定要删除此记录吗?', '提示', {
                      confirmButtonText: '确定',
                      cancelButtonText: '取消',
                      type: 'warning'
                    }).then(function() {
                        that.DoDelete(m);
                    }).catch(function() {
                    });
                },
                DoDelete: function (m) {
                    var that = this;
                    CommonAjaxPost("/Cycle/Delete/" + m.CycleId, {}, function (data) {
                        if (data.result) {
                            that.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                            that.GetData();
                        } else {
                            that.$message.error("出错了：" + data.message);
                        }
                    });
                },
                InitTinymce: function () {
                    tinymce.init({
                        selector: '#TxtMemo',
                        language: 'zh_CN',
                        plugins: plugins,
                        toolbar: toolbar,
                        images_upload_url: "/Home/Upload",
                        height: 600
                    });
                },
                DestroyTinymce: function () {
                    tinymce.remove("#TxtMemo");
                },
                closeDialog: function (done) {
                    this.DestroyTinymce();

                    this.$nextTick(function () { done(); });
                },
                EditCacel: function () {
                    this.DestroyTinymce();
                    this.showEdit = false;
                }
            },
            mounted: function () {
                this.GetData();
                this.QueryFatePointLeafOnly = false;
                @await Html.PartialAsync("CommonMounted")
            }
        });
        const plugins = ['advlist anchor autolink autosave code codesample colorpicker colorpicker contextmenu directionality emoticons fullscreen hr image imagetools insertdatetime link lists media nonbreaking noneditable pagebreak preview print save searchreplace spellchecker tabfocus table template textcolor textpattern visualblocks visualchars wordcount']
        const toolbar = ['searchreplace bold italic underline strikethrough alignleft aligncenter alignright outdent indent  blockquote undo redo removeformat subscript superscript code codesample', 'hr bullist numlist link image charmap preview anchor pagebreak insertdatetime media table emoticons forecolor backcolor fullscreen']
    </script>
}